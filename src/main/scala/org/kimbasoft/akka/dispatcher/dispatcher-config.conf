akka.actor.deployment {

  /simple-dispatcher-actor {
    dispatcher = org.kimbasoft.akka.simple-dispatcher
  }

  /thread-pool-dispatcher-actor {
    dispatcher = org.kimbasoft.akka.thread-pool-dispatcher
  }
}

org.kimbasoft.akka {

  simple-dispatcher {
    # Dispatcher is the name of the event-based dispatcher
    type = Dispatcher
    # What kind of ExecutionService to use
    executor = "fork-join-executor"
    # Configuration for the fork join pool
    fork-join-executor {
      # Min number of threads to cap factor-based parallelism number to
      parallelism-min = 4
      # Parallelism (threads) ... ceil(available processors * factor)
      parallelism-factor = 2.0
      # Max number of threads to cap factor-based parallelism number to
      parallelism-max = 10
    }
    # Throughput defines the maximum number of messages to be
    # processed per actor before the thread jumps to the next actor.
    # Set to 1 for as fair as possible.
    throughput = 1

    # For BalancingDispatcher: If the balancing dispatcher should attempt to
    # schedule idle actors using the same dispatcher when a message comes in,
    # and the dispatchers ExecutorService is not fully busy already.
    attempt-teamwork = on
  }

  thread-pool-dispatcher {
    # Dispatcher is the name of the event-based dispatcher
    type = Dispatcher
    # What kind of ExecutionService to use
    executor = "thread-pool-executor"
    # Configuration for the thread pool
    thread-pool-executor {
      # minimum number of threads to cap factor-based core number to
      core-pool-size-min = 2
      # No of core threads ... ceil(available processors * factor)
      core-pool-size-factor = 2.0
      # maximum number of threads to cap factor-based number to
      core-pool-size-max = 10
    }
    # Throughput defines the maximum number of messages to be
    # processed per actor before the thread jumps to the next actor.
    # Set to 1 for as fair as possible.
    throughput = 1

    # For BalancingDispatcher: If the balancing dispatcher should attempt to
    # schedule idle actors using the same dispatcher when a message comes in,
    # and the dispatchers ExecutorService is not fully busy already.
    attempt-teamwork = on
  }
}